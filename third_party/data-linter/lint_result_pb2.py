# Copyright 2017 Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================
#
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lint_result.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import example_pb2 as example__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='lint_result.proto',
  package='datalinter',
  syntax='proto3',
  serialized_pb=b'\n\x11lint_result.proto\x12\ndatalinter\x1a\rexample.proto\"a\n\nLintResult\x12\x13\n\x0blinter_name\x18\x01 \x01(\t\x12\x10\n\x08warnings\x18\x02 \x03(\t\x12,\n\x0clint_samples\x18\x03 \x03(\x0b\x32\x16.datalinter.LintSample\"y\n\nLintSample\x12%\n\x08\x65xamples\x18\x02 \x03(\x0b\x32\x13.tensorflow.Example\x12\x0f\n\x07strings\x18\x03 \x03(\t\x12\x0c\n\x04nums\x18\x04 \x03(\x01\x12%\n\x05stats\x18\x05 \x03(\x0b\x32\x16.datalinter.Statistics\"`\n\nStatistics\x12\n\n\x02id\x18\x01 \x01(\t\x12\r\n\x05\x63ount\x18\x02 \x01(\x01\x12\x0c\n\x04mean\x18\x03 \x01(\x01\x12\x0f\n\x07std_dev\x18\x04 \x01(\x01\x12\x0b\n\x03min\x18\x05 \x01(\x01\x12\x0b\n\x03max\x18\x06 \x01(\x01\x42\x03\xf8\x01\x01\x62\x06proto3'
  ,
  dependencies=[example__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_LINTRESULT = _descriptor.Descriptor(
  name='LintResult',
  full_name='datalinter.LintResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='linter_name', full_name='datalinter.LintResult.linter_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='warnings', full_name='datalinter.LintResult.warnings', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lint_samples', full_name='datalinter.LintResult.lint_samples', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=48,
  serialized_end=145,
)


_LINTSAMPLE = _descriptor.Descriptor(
  name='LintSample',
  full_name='datalinter.LintSample',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='examples', full_name='datalinter.LintSample.examples', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='strings', full_name='datalinter.LintSample.strings', index=1,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nums', full_name='datalinter.LintSample.nums', index=2,
      number=4, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stats', full_name='datalinter.LintSample.stats', index=3,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=147,
  serialized_end=268,
)


_STATISTICS = _descriptor.Descriptor(
  name='Statistics',
  full_name='datalinter.Statistics',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='datalinter.Statistics.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='count', full_name='datalinter.Statistics.count', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mean', full_name='datalinter.Statistics.mean', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='std_dev', full_name='datalinter.Statistics.std_dev', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='min', full_name='datalinter.Statistics.min', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max', full_name='datalinter.Statistics.max', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=270,
  serialized_end=366,
)

_LINTRESULT.fields_by_name['lint_samples'].message_type = _LINTSAMPLE
_LINTSAMPLE.fields_by_name['examples'].message_type = example__pb2._EXAMPLE
_LINTSAMPLE.fields_by_name['stats'].message_type = _STATISTICS
DESCRIPTOR.message_types_by_name['LintResult'] = _LINTRESULT
DESCRIPTOR.message_types_by_name['LintSample'] = _LINTSAMPLE
DESCRIPTOR.message_types_by_name['Statistics'] = _STATISTICS

LintResult = _reflection.GeneratedProtocolMessageType('LintResult', (_message.Message,), dict(
  DESCRIPTOR = _LINTRESULT,
  __module__ = 'lint_result_pb2'
  # @@protoc_insertion_point(class_scope:datalinter.LintResult)
  ))
_sym_db.RegisterMessage(LintResult)

LintSample = _reflection.GeneratedProtocolMessageType('LintSample', (_message.Message,), dict(
  DESCRIPTOR = _LINTSAMPLE,
  __module__ = 'lint_result_pb2'
  # @@protoc_insertion_point(class_scope:datalinter.LintSample)
  ))
_sym_db.RegisterMessage(LintSample)

Statistics = _reflection.GeneratedProtocolMessageType('Statistics', (_message.Message,), dict(
  DESCRIPTOR = _STATISTICS,
  __module__ = 'lint_result_pb2'
  # @@protoc_insertion_point(class_scope:datalinter.Statistics)
  ))
_sym_db.RegisterMessage(Statistics)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), b'\370\001\001')
# @@protoc_insertion_point(module_scope)
